1. FactoryInfo.cpp:
	1. Полета:
		1.1. country - Пази държавата;
		1.2. price - Пази цената;
		1.3. get_country(), get_price() - Връща 1.1. и 1.2;
	2. Конструктор и деструктор;

2. ComponentInfo.cpp:
	2.0. Препроцесор - дефиниране на COMP_FILE accounts.txt - файлът, в който се пази информацията за компонентите разделени с ` - `;
	2.1. Полета:
		2.1.1. nomenclature_nomer - номенклатурен номер;
		2.1.2. name - Име на ел. елемент (resistor, capacitor, diode and etc.);
		2.1.3. value - Стойност на показателя;
		2.1.4. unit - Пази мерната единица (m, M, F, pF and etc.);
		2.1.5. factory_info - обект от тип FactoryInfo (1);

	2.2. Конструктори и деструктори:
		2.2.1. Празен конструктор;
		2.2.2. ComponentInfo - конструктор с параметри, използва се при създаване от Main.cpp на нов обект;
		2.2.3. ComponentInfo(string *tokens) - използва се за създаване на обекти при четене на файла;
		2.2.4. ~ComponentInfo() - деструктор;


	2.3. Функции:
		2.3.1. get_* - връща стойностите от 2.1.;
		2.3.2. friend функцията - override на << за записване на данни във файл (сериализиране);
		2.3.3. get_all_components - връща всички компоненти, които са във файла под формата на списък;
		2.3.4. delete_component_by_nomenclature - приема номенклатурен номер и създава временен файл, където се изтрива дадения елемент и след това презаписва ACC_FILE (accounts.txt);
		2.3.5. print_info - Връща информация за текущия обект;


3. Main.cpp:
	3.0. В началото е дефиниран components - списъка с всички компоненти от файла;
	3.1. menu - Меню с опции за по- долните функции;
	3.2. create_new_component - Създава нов компонент и го връща като обект;
	3.3. get_all_component - Принтира информация за всички обекти (2.3.5.);
	3.4. delete_component - Изтрива компонент (2.3.4.);
	3.5. get_all_capacitors_in_given_range - Взима всички ел. елементи със стойности в даден обсег. Приема параметър име - rezistor, capacitor, diode и т.н., мерна единица - pF, F, M и т.н. и долна и горна граница;

