1. BankAccount.cpp:
	1.1. Има полета:
		1.1.1. unique_code - Random генерирани стойности;
		1.1.2. holder_name - Pointer към char array (като стринг);
		1.1.3. total_debit - Обща сума по дебит;
		1.1.4. total_credit - Обща сума по кредит;
		1.1.5. debit - Списък с постъпления по дебит;
		1.1.6. credit - Списък с постъпления по кредит;

	1.2. Конструктор и дестуктор:
		1.2.1. Един празен констуктор - който казва, че си създал празен обект;
		1.2.2. Обикновен констуктор - който приема holder_name (1.1.2) и прави валидация, като инициализира основните полета;
		1.2.3. Конструктор, който приема char* tokens – Те са при четене на файла;
		1.2.4. ~BankAccount() – деструктора;

	1.3. Функции:
		1.3.1. - create_unique_code - Създава unique_code (1.1.1);
		1.3.2. - is_valid_holder_name - Валидация на holder_name (1.1.2.) - Като въвеждаш име от менюто вкарвай поне 5 символа, че гърми със segmentation fault;
		1.3.3. - *get_holder_name - Връща holder_name (1.1.2);
		1.3.4. - *get_unique_code - Връща unique_code (1.1.1);
		1.3.5. - insert_amount - Добавя към debit списъка (1.1.5.) и записва транзакцията във файл;
		1.3.6. - withdraw_amount - Добавя към credit списъка (1.1.6.) и записва транзакцията във файл;
		1.3.7. - insert_data_for_transaction - Функцията от (1.3.5 и 1.3.6.) - Записва ред с "Debit: "/"Credit: " във файл с име ID-то на holder-a (1.1.1) - Пример:
			file: U12345.txt
				- Debit: 420
				- Credit: 98
		1.3.8. - get_total_debit - Връща total_debit (1.1.3);
		1.3.9. - get_total_credit - Връща total_credit (1.1.4.);
		1.3.10. - friend функцията - Презаписване на << оператора, който пише във файл - записва ти обект във файл (това е при конструктора 1.2.2., маркирано с коментар);
		1.3.11. - get_all_accounts - Чете акаунтите от файл и създава списък от тях, като вика констуктора от 1.2.3.
		1.3.12. - print_info - Принтира информация за текущия акаунт.

2. Main.cpp:
	2.1. При извикване на main се инициализира accounts list<BankAccounts> (1.3.11);
	2.2. main - методът съдържа само методът menu();
	2.3. menu - визуализира менюто;
	2.4. create_new_account - Създава нов акаунт и го връща като обект, като приема параметър от потребителя име - holder_name (1.2.2);
	2.5. get_all_account - Принтира информация за всички сметки (1.3.12);
	2.6. insert_amount - Приема като параметът от потребителя ID и amount и предава данните към (1.3.5.);
	2.7. insert_amount - Приема като параметът от потребителя ID и amount и предава данните към (1.3.6.);
	2.8. get_account_balance - Връща текущо състояние на сметката спрямо total_debit и total_credit;
	2.9. account_handlers_with_more_than_one - Изкарва акаунтите с повече от една сметка, пази информацията в HashMap с ключ - holder_name и стойност - броя на банковите сметки. Ако няма и един holder с повече от една сметка връща съобщение.

3. Примерен тест:
	3.1. Създаване на 3 акаунта (2.4) (преглед на файла accounts.txt в същата директория);
	3.2. Листване на всички акаунти (2.5.);
	3.3. Добавяне на debit/credit с 2.6 i 2.7. и след това отново листване (3.2);
	3.4. Показване на баланса за акаунта от 3.3. с помощта на 2.8.;
	3.5. Добавяне на още една сметка с някой от holders от 3.1. и извикване на 2.9.;
